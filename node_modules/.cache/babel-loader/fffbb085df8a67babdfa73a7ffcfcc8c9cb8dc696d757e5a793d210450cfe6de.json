{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ikesh\\\\Desktop\\\\voice-matcher\\\\src\\\\components\\\\AudioInputBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AudioInputBar = ({\n  onDeviceSelect\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState('');\n  const [audioLevel, setAudioLevel] = useState(0);\n  const [isPlaybackEnabled, setIsPlaybackEnabled] = useState(false);\n  const [volume, setVolume] = useState(0.75); // Default volume at 75%\n  const audioContextRef = useRef(null);\n  const streamRef = useRef(null);\n  const sourceRef = useRef(null);\n  const gainNodeRef = useRef(null);\n  const analyserRef = useRef(null);\n  useEffect(() => {\n    const getDevices = async () => {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const audioDevices = devices.filter(device => device.kind === 'audioinput');\n        setDevices(audioDevices);\n        if (audioDevices.length > 0) {\n          setSelectedDevice(audioDevices[0].deviceId);\n          onDeviceSelect(audioDevices[0].deviceId);\n        }\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n      }\n    };\n    getDevices();\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, [onDeviceSelect]);\n  useEffect(() => {\n    if (!selectedDevice) return;\n    let animationId;\n    const setupAudio = async () => {\n      try {\n        if (streamRef.current) {\n          streamRef.current.getTracks().forEach(track => track.stop());\n        }\n        if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n          await audioContextRef.current.close();\n        }\n        audioContextRef.current = new AudioContext({\n          sampleRate: 48000\n        });\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            deviceId: {\n              exact: selectedDevice\n            },\n            echoCancellation: false,\n            // Disable echo cancellation\n            noiseSuppression: false,\n            // Disable noise suppression\n            autoGainControl: false,\n            // Disable auto gain\n            latency: 0,\n            // Minimize latency\n            sampleRate: 48000 // Higher sample rate\n          }\n        });\n        streamRef.current = stream;\n        sourceRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        gainNodeRef.current = audioContextRef.current.createGain();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n        analyserRef.current.fftSize = 2048; // Increased FFT size\n        analyserRef.current.smoothingTimeConstant = 0.6;\n        gainNodeRef.current.gain.value = volume;\n        sourceRef.current.connect(analyserRef.current);\n        sourceRef.current.connect(gainNodeRef.current);\n        if (isPlaybackEnabled) {\n          gainNodeRef.current.connect(audioContextRef.current.destination);\n        }\n        const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\n        const updateLevel = () => {\n          if (!analyserRef.current) return;\n          analyserRef.current.getByteFrequencyData(dataArray);\n          let sum = 0;\n          for (let i = 0; i < dataArray.length; i++) {\n            sum += dataArray[i] / 128.0 * (dataArray[i] / 128.0);\n          }\n          const rms = Math.sqrt(sum / dataArray.length);\n          const scaledLevel = Math.min(100, rms * 150);\n          setAudioLevel(scaledLevel);\n          animationId = requestAnimationFrame(updateLevel);\n        };\n        updateLevel();\n      } catch (error) {\n        console.error('Error setting up audio:', error);\n      }\n    };\n    setupAudio();\n    return () => {\n      if (animationId) cancelAnimationFrame(animationId);\n    };\n  }, [selectedDevice, volume]);\n  useEffect(() => {\n    if (!gainNodeRef.current || !audioContextRef.current) return;\n    if (isPlaybackEnabled) {\n      gainNodeRef.current.connect(audioContextRef.current.destination);\n    } else {\n      gainNodeRef.current.disconnect(audioContextRef.current.destination);\n    }\n  }, [isPlaybackEnabled]);\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (gainNodeRef.current) {\n      gainNodeRef.current.gain.value = newVolume;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-md space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDevice,\n      onChange: e => {\n        setSelectedDevice(e.target.value);\n        onDeviceSelect(e.target.value);\n      },\n      className: \"w-full p-2 bg-gray-700 text-white rounded-lg\",\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device.deviceId,\n        children: device.label || `Microphone ${device.deviceId.slice(0, 5)}`\n      }, device.deviceId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"playback\",\n          checked: isPlaybackEnabled,\n          onChange: () => setIsPlaybackEnabled(prev => !prev),\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playback\",\n          className: \"text-sm\",\n          children: \"Enable live playback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"volume\",\n          className: \"text-sm min-w-[60px]\",\n          children: \"Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          id: \"volume\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.05\",\n          value: volume,\n          onChange: handleVolumeChange,\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm min-w-[40px]\",\n          children: [Math.round(volume * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-4 bg-gray-700 rounded-full overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full bg-green-500 transition-all duration-100\",\n        style: {\n          width: `${audioLevel}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-gray-400 text-right\",\n      children: [\"Level: \", Math.round(audioLevel), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioInputBar, \"0rGMA+Yp4uoSmmlDG/fd7C+VQlQ=\");\n_c = AudioInputBar;\nvar _c;\n$RefreshReg$(_c, \"AudioInputBar\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","AudioInputBar","onDeviceSelect","_s","devices","setDevices","selectedDevice","setSelectedDevice","audioLevel","setAudioLevel","isPlaybackEnabled","setIsPlaybackEnabled","volume","setVolume","audioContextRef","streamRef","sourceRef","gainNodeRef","analyserRef","getDevices","navigator","mediaDevices","getUserMedia","audio","enumerateDevices","audioDevices","filter","device","kind","length","deviceId","error","console","current","getTracks","forEach","track","stop","close","animationId","setupAudio","state","AudioContext","sampleRate","stream","exact","echoCancellation","noiseSuppression","autoGainControl","latency","createMediaStreamSource","createGain","createAnalyser","fftSize","smoothingTimeConstant","gain","value","connect","destination","dataArray","Uint8Array","frequencyBinCount","updateLevel","getByteFrequencyData","sum","i","rms","Math","sqrt","scaledLevel","min","requestAnimationFrame","cancelAnimationFrame","disconnect","handleVolumeChange","e","newVolume","parseFloat","target","className","children","onChange","map","label","slice","fileName","_jsxFileName","lineNumber","columnNumber","type","id","checked","prev","htmlFor","max","step","round","style","width","_c","$RefreshReg$"],"sources":["C:/Users/ikesh/Desktop/voice-matcher/src/components/AudioInputBar.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\ninterface AudioInputBarProps {\r\n  onDeviceSelect: (deviceId: string) => void;\r\n}\r\n\r\nexport const AudioInputBar: React.FC<AudioInputBarProps> = ({ onDeviceSelect }) => {\r\n  const [devices, setDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [selectedDevice, setSelectedDevice] = useState<string>('');\r\n  const [audioLevel, setAudioLevel] = useState<number>(0);\r\n  const [isPlaybackEnabled, setIsPlaybackEnabled] = useState(false);\r\n  const [volume, setVolume] = useState<number>(0.75); // Default volume at 75%\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const streamRef = useRef<MediaStream | null>(null);\r\n  const sourceRef = useRef<MediaStreamAudioSourceNode | null>(null);\r\n  const gainNodeRef = useRef<GainNode | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    const getDevices = async () => {\r\n      try {\r\n        await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const audioDevices = devices.filter(device => device.kind === 'audioinput');\r\n        setDevices(audioDevices);\r\n        \r\n        if (audioDevices.length > 0) {\r\n          setSelectedDevice(audioDevices[0].deviceId);\r\n          onDeviceSelect(audioDevices[0].deviceId);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error accessing microphone:', error);\r\n      }\r\n    };\r\n\r\n    getDevices();\r\n\r\n    return () => {\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, [onDeviceSelect]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedDevice) return;\r\n\r\n    let animationId: number;\r\n    \r\n    const setupAudio = async () => {\r\n      try {\r\n        if (streamRef.current) {\r\n          streamRef.current.getTracks().forEach(track => track.stop());\r\n        }\r\n        if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\r\n          await audioContextRef.current.close();\r\n        }\r\n\r\n        audioContextRef.current = new AudioContext({ sampleRate: 48000 });\r\n        \r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: { \r\n            deviceId: { exact: selectedDevice },\r\n            echoCancellation: false,  // Disable echo cancellation\r\n            noiseSuppression: false,  // Disable noise suppression\r\n            autoGainControl: false,   // Disable auto gain\r\n            latency: 0,               // Minimize latency\r\n            sampleRate: 48000         // Higher sample rate\r\n          }\r\n        });\r\n        streamRef.current = stream;\r\n\r\n        sourceRef.current = audioContextRef.current.createMediaStreamSource(stream);\r\n        gainNodeRef.current = audioContextRef.current.createGain();\r\n        analyserRef.current = audioContextRef.current.createAnalyser();\r\n\r\n        analyserRef.current.fftSize = 2048;  // Increased FFT size\r\n        analyserRef.current.smoothingTimeConstant = 0.6;\r\n\r\n        gainNodeRef.current.gain.value = volume;\r\n\r\n        sourceRef.current.connect(analyserRef.current);\r\n        sourceRef.current.connect(gainNodeRef.current);\r\n\r\n        if (isPlaybackEnabled) {\r\n          gainNodeRef.current.connect(audioContextRef.current.destination);\r\n        }\r\n\r\n        const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\r\n        \r\n        const updateLevel = () => {\r\n          if (!analyserRef.current) return;\r\n          \r\n          analyserRef.current.getByteFrequencyData(dataArray);\r\n          \r\n          let sum = 0;\r\n          for (let i = 0; i < dataArray.length; i++) {\r\n            sum += (dataArray[i] / 128.0) * (dataArray[i] / 128.0);\r\n          }\r\n          const rms = Math.sqrt(sum / dataArray.length);\r\n          const scaledLevel = Math.min(100, rms * 150);\r\n          setAudioLevel(scaledLevel);\r\n          \r\n          animationId = requestAnimationFrame(updateLevel);\r\n        };\r\n\r\n        updateLevel();\r\n      } catch (error) {\r\n        console.error('Error setting up audio:', error);\r\n      }\r\n    };\r\n\r\n    setupAudio();\r\n\r\n    return () => {\r\n      if (animationId) cancelAnimationFrame(animationId);\r\n    };\r\n  }, [selectedDevice, volume]);\r\n\r\n  useEffect(() => {\r\n    if (!gainNodeRef.current || !audioContextRef.current) return;\r\n\r\n    if (isPlaybackEnabled) {\r\n      gainNodeRef.current.connect(audioContextRef.current.destination);\r\n    } else {\r\n      gainNodeRef.current.disconnect(audioContextRef.current.destination);\r\n    }\r\n  }, [isPlaybackEnabled]);\r\n\r\n  const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newVolume = parseFloat(e.target.value);\r\n    setVolume(newVolume);\r\n    if (gainNodeRef.current) {\r\n      gainNodeRef.current.gain.value = newVolume;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md space-y-4\">\r\n      <select\r\n        value={selectedDevice}\r\n        onChange={(e) => {\r\n          setSelectedDevice(e.target.value);\r\n          onDeviceSelect(e.target.value);\r\n        }}\r\n        className=\"w-full p-2 bg-gray-700 text-white rounded-lg\"\r\n      >\r\n        {devices.map(device => (\r\n          <option key={device.deviceId} value={device.deviceId}>\r\n            {device.label || `Microphone ${device.deviceId.slice(0, 5)}`}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      \r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"playback\"\r\n            checked={isPlaybackEnabled}\r\n            onChange={() => setIsPlaybackEnabled(prev => !prev)}\r\n            className=\"w-4 h-4\"\r\n          />\r\n          <label htmlFor=\"playback\" className=\"text-sm\">\r\n            Enable live playback\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-2\">\r\n          <label htmlFor=\"volume\" className=\"text-sm min-w-[60px]\">\r\n            Volume:\r\n          </label>\r\n          <input\r\n            type=\"range\"\r\n            id=\"volume\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.05\"\r\n            value={volume}\r\n            onChange={handleVolumeChange}\r\n            className=\"w-full\"\r\n          />\r\n          <span className=\"text-sm min-w-[40px]\">\r\n            {Math.round(volume * 100)}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-full h-4 bg-gray-700 rounded-full overflow-hidden\">\r\n        <div\r\n          className=\"h-full bg-green-500 transition-all duration-100\"\r\n          style={{ width: `${audioLevel}%` }}\r\n        />\r\n      </div>\r\n      <div className=\"text-xs text-gray-400 text-right\">\r\n        Level: {Math.round(audioLevel)}%\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}