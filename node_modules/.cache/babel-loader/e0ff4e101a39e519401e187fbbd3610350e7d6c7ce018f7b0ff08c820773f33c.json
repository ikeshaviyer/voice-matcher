{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ikesh\\\\Desktop\\\\voice-matcher\\\\src\\\\components\\\\GameScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { audioManager } from '../utils/audioUtils';\nimport { audioAnalyzer } from '../utils/audioAnalysis';\nimport { SAMPLE_CLIPS } from '../types/audio';\nimport { useVoiceRecorder } from '../hooks/useVoiceRecorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameScreen = ({\n  deviceId,\n  onGameEnd\n}) => {\n  _s();\n  const [round, setRound] = useState(1);\n  const [gameState, setGameState] = useState('ready');\n  const [countdown, setCountdown] = useState(null);\n  const [scores, setScores] = useState([]);\n  const [currentClip, setCurrentClip] = useState(null);\n  const [loadingAudio, setLoadingAudio] = useState(true);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [lastRecording, setLastRecording] = useState(null);\n  const [recordingError, setRecordingError] = useState(null);\n  const {\n    startRecording,\n    stopRecording,\n    isRecording,\n    error: recorderError\n  } = useVoiceRecorder(deviceId);\n  useEffect(() => {\n    const loadAudio = async () => {\n      setLoadingAudio(true);\n      try {\n        await audioManager.loadAllClips(SAMPLE_CLIPS);\n        const firstClip = SAMPLE_CLIPS[Math.floor(Math.random() * SAMPLE_CLIPS.length)];\n        setCurrentClip(firstClip);\n        setLoadingAudio(false);\n      } catch (error) {\n        console.error('Error loading audio clips:', error);\n        setLoadingAudio(false);\n      }\n    };\n    loadAudio();\n  }, []);\n  const playClip = async () => {\n    if (!currentClip) {\n      console.error('No clip selected');\n      return;\n    }\n    setGameState('playing');\n    console.log('Playing clip:', currentClip.name);\n    try {\n      await audioManager.play(currentClip.id);\n      setGameState('countdown');\n      startCountdown();\n    } catch (error) {\n      console.error('Error playing audio:', error);\n      setGameState('ready');\n    }\n  };\n  const startCountdown = () => {\n    setCountdown(3);\n    const interval = setInterval(() => {\n      setCountdown(prev => {\n        if (prev === null || prev <= 1) {\n          clearInterval(interval);\n          if (prev === 1) {\n            setGameState('recording');\n            handleStartRecording();\n          }\n          return null;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const handleStartRecording = async () => {\n    try {\n      await startRecording();\n      // Stop recording after clip duration\n      setTimeout(handleStopRecording, (currentClip === null || currentClip === void 0 ? void 0 : currentClip.duration) || 5000);\n    } catch (err) {\n      setRecordingError('Failed to start recording');\n      console.error('Recording error:', err);\n    }\n  };\n  const handleStopRecording = async () => {\n    if (!currentClip) return;\n    try {\n      setAnalyzing(true);\n      setRecordingError(null);\n      const recordingBlob = await stopRecording();\n      setLastRecording(recordingBlob);\n      const originalBuffer = audioManager.getBuffer(currentClip.id);\n      if (!originalBuffer) {\n        throw new Error('Original audio not found');\n      }\n      const recordedBuffer = await audioAnalyzer.audioBufferFromBlob(recordingBlob);\n      const originalFeatures = await audioAnalyzer.analyzePitch(originalBuffer);\n      const recordedFeatures = await audioAnalyzer.analyzePitch(recordedBuffer);\n      const results = await audioAnalyzer.compareAudio(originalFeatures, recordedFeatures);\n\n      // Use only amplitude match for the score\n      const finalScore = Math.round(results.amplitudeMatch);\n      setScores(prev => [...prev, {\n        clipId: currentClip.id,\n        score: finalScore,\n        durationMatch: results.durationMatch,\n        // Keep tracking but don't use for score\n        amplitudeMatch: results.amplitudeMatch,\n        pitchMatch: 0\n      }]);\n      setGameState('scored');\n    } catch (err) {\n      console.error('Full analysis error:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error occurred';\n      setRecordingError(`Failed to analyze recording: ${errorMessage}`);\n    } finally {\n      setAnalyzing(false);\n    }\n  };\n  const startNextRound = () => {\n    setRecordingError(null);\n    setGameState('ready');\n    if (scores.length >= 5) {\n      const finalScore = scores.reduce((a, b) => a + b.score, 0) / scores.length;\n      const finalMessage = finalScore >= 90 ? \"Move over Taylor Swift, we've got a new star! ðŸŒŸ\" : finalScore >= 75 ? \"You might have a future in elevator music.\" : finalScore >= 50 ? \"Never pick up a microphone again...\" : finalScore >= 25 ? \"Never speak again...\" : \"I have no words for this...\";\n      onGameEnd(finalScore, finalMessage);\n      return;\n    }\n    setRound(prev => prev + 1);\n    const unusedClips = SAMPLE_CLIPS.filter(clip => !scores.some(score => score.clipId === clip.id));\n    const clip = unusedClips[Math.floor(Math.random() * unusedClips.length)];\n    setCurrentClip(clip);\n  };\n  const playLastRecording = async () => {\n    if (lastRecording) {\n      const audioUrl = URL.createObjectURL(lastRecording);\n      const audio = new Audio(audioUrl);\n      await audio.play();\n      URL.revokeObjectURL(audioUrl);\n    }\n  };\n  if (loadingAudio) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl mb-4\",\n        children: \"Loading audio clips...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-2xl mb-8\",\n      children: [\"Round \", round, \"/5\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), gameState === 'ready' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playClip,\n      className: \"px-8 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors mb-8\",\n      children: \"Play Sample Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl text-blue-400 mb-8\",\n      children: [\"Listen carefully...\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 mt-4 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), gameState === 'countdown' && countdown !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-6xl mb-8 text-yellow-400 animate-pulse\",\n      children: [\"Get Ready: \", countdown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), gameState === 'recording' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl text-red-400 mb-8\",\n      children: [\"Recording...\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 mt-4 bg-red-500 rounded-full animate-ping mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), analyzing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl text-purple-400 mb-8\",\n      children: [\"Analyzing your performance...\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 mt-4 border-4 border-purple-500 border-t-transparent rounded-full animate-spin mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), gameState === 'scored' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center gap-4 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playLastRecording,\n        className: \"px-6 py-2 bg-green-600 hover:bg-green-700 rounded-lg text-sm\",\n        children: \"Play Your Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNextRound,\n        className: \"px-8 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold\",\n        children: \"Next Round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4 w-full max-w-md\",\n      children: scores.map((score, index) => {\n        const clip = SAMPLE_CLIPS.find(c => c.id === score.clipId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg mb-2\",\n            children: [\"Round \", index + 1, \" - \", clip === null || clip === void 0 ? void 0 : clip.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl mb-2 font-bold text-blue-400\",\n            children: [\"Score: \", score.score, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), (recordingError || recorderError) && gameState !== 'scored' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mt-4\",\n      children: recordingError || recorderError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(GameScreen, \"G8zN7r7lFuzjkguTYrDmzr9wh5g=\", false, function () {\n  return [useVoiceRecorder];\n});\n_c = GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","audioManager","audioAnalyzer","SAMPLE_CLIPS","useVoiceRecorder","jsxDEV","_jsxDEV","GameScreen","deviceId","onGameEnd","_s","round","setRound","gameState","setGameState","countdown","setCountdown","scores","setScores","currentClip","setCurrentClip","loadingAudio","setLoadingAudio","analyzing","setAnalyzing","lastRecording","setLastRecording","recordingError","setRecordingError","startRecording","stopRecording","isRecording","error","recorderError","loadAudio","loadAllClips","firstClip","Math","floor","random","length","console","playClip","log","name","play","id","startCountdown","interval","setInterval","prev","clearInterval","handleStartRecording","setTimeout","handleStopRecording","duration","err","recordingBlob","originalBuffer","getBuffer","Error","recordedBuffer","audioBufferFromBlob","originalFeatures","analyzePitch","recordedFeatures","results","compareAudio","finalScore","amplitudeMatch","clipId","score","durationMatch","pitchMatch","errorMessage","message","startNextRound","reduce","a","b","finalMessage","unusedClips","filter","clip","some","playLastRecording","audioUrl","URL","createObjectURL","audio","Audio","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","find","c","_c","$RefreshReg$"],"sources":["C:/Users/ikesh/Desktop/voice-matcher/src/components/GameScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { audioManager } from '../utils/audioUtils';\r\nimport { audioAnalyzer } from '../utils/audioAnalysis';\r\nimport { SAMPLE_CLIPS, AudioClip, Score } from '../types/audio';\r\nimport { useVoiceRecorder } from '../hooks/useVoiceRecorder';\r\n\r\ninterface GameScreenProps {\r\n  deviceId: string;\r\n  onGameEnd: (score: number, message: string) => void;\r\n}\r\n\r\ninterface DetailedScore extends Score {\r\n  durationMatch: number;\r\n  pitchMatch: number;\r\n  amplitudeMatch: number;\r\n}\r\n\r\nexport const GameScreen: React.FC<GameScreenProps> = ({ deviceId, onGameEnd }) => {\r\n  const [round, setRound] = useState(1);\r\n  const [gameState, setGameState] = useState<'playing' | 'countdown' | 'recording' | 'scored' | 'ready'>('ready');\r\n  const [countdown, setCountdown] = useState<number | null>(null);\r\n  const [scores, setScores] = useState<DetailedScore[]>([]);\r\n  const [currentClip, setCurrentClip] = useState<AudioClip | null>(null);\r\n  const [loadingAudio, setLoadingAudio] = useState(true);\r\n  const [analyzing, setAnalyzing] = useState(false);\r\n  const [lastRecording, setLastRecording] = useState<Blob | null>(null);\r\n  const [recordingError, setRecordingError] = useState<string | null>(null);\r\n\r\n  const { \r\n    startRecording, \r\n    stopRecording, \r\n    isRecording, \r\n    error: recorderError \r\n  } = useVoiceRecorder(deviceId);\r\n\r\n  useEffect(() => {\r\n    const loadAudio = async () => {\r\n      setLoadingAudio(true);\r\n      try {\r\n        await audioManager.loadAllClips(SAMPLE_CLIPS);\r\n        const firstClip = SAMPLE_CLIPS[Math.floor(Math.random() * SAMPLE_CLIPS.length)];\r\n        setCurrentClip(firstClip);\r\n        setLoadingAudio(false);\r\n      } catch (error) {\r\n        console.error('Error loading audio clips:', error);\r\n        setLoadingAudio(false);\r\n      }\r\n    };\r\n\r\n    loadAudio();\r\n  }, []);\r\n\r\n  const playClip = async () => {\r\n    if (!currentClip) {\r\n      console.error('No clip selected');\r\n      return;\r\n    }\r\n    \r\n    setGameState('playing');\r\n    console.log('Playing clip:', currentClip.name);\r\n    \r\n    try {\r\n      await audioManager.play(currentClip.id);\r\n      setGameState('countdown');\r\n      startCountdown();\r\n    } catch (error) {\r\n      console.error('Error playing audio:', error);\r\n      setGameState('ready');\r\n    }\r\n  };\r\n\r\n  const startCountdown = () => {\r\n    setCountdown(3);\r\n    const interval = setInterval(() => {\r\n      setCountdown(prev => {\r\n        if (prev === null || prev <= 1) {\r\n          clearInterval(interval);\r\n          if (prev === 1) {\r\n            setGameState('recording');\r\n            handleStartRecording();\r\n          }\r\n          return null;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      await startRecording();\r\n      // Stop recording after clip duration\r\n      setTimeout(handleStopRecording, currentClip?.duration || 5000);\r\n    } catch (err) {\r\n      setRecordingError('Failed to start recording');\r\n      console.error('Recording error:', err);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    if (!currentClip) return;\r\n    \r\n    try {\r\n      setAnalyzing(true);\r\n      setRecordingError(null);\r\n      const recordingBlob = await stopRecording();\r\n      setLastRecording(recordingBlob);\r\n      \r\n      const originalBuffer = audioManager.getBuffer(currentClip.id);\r\n      if (!originalBuffer) {\r\n        throw new Error('Original audio not found');\r\n      }\r\n      \r\n      const recordedBuffer = await audioAnalyzer.audioBufferFromBlob(recordingBlob);\r\n      const originalFeatures = await audioAnalyzer.analyzePitch(originalBuffer);\r\n      const recordedFeatures = await audioAnalyzer.analyzePitch(recordedBuffer);\r\n      const results = await audioAnalyzer.compareAudio(originalFeatures, recordedFeatures);\r\n      \r\n      // Use only amplitude match for the score\r\n      const finalScore = Math.round(results.amplitudeMatch);\r\n\r\n      setScores(prev => [...prev, {\r\n        clipId: currentClip.id,\r\n        score: finalScore,\r\n        durationMatch: results.durationMatch, // Keep tracking but don't use for score\r\n        amplitudeMatch: results.amplitudeMatch,\r\n        pitchMatch: 0\r\n      }]);\r\n      setGameState('scored');\r\n    } catch (err: unknown) {\r\n      console.error('Full analysis error:', err);\r\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error occurred';\r\n      setRecordingError(`Failed to analyze recording: ${errorMessage}`);\r\n    } finally {\r\n      setAnalyzing(false);\r\n    }\r\n  };\r\n\r\n  const startNextRound = () => {\r\n    setRecordingError(null);\r\n    setGameState('ready');\r\n    \r\n    if (scores.length >= 5) {\r\n      const finalScore = scores.reduce((a, b) => a + b.score, 0) / scores.length;\r\n      const finalMessage = finalScore >= 90 ? \"Move over Taylor Swift, we've got a new star! ðŸŒŸ\" :\r\n                          finalScore >= 75 ? \"You might have a future in elevator music.\" :\r\n                          finalScore >= 50 ? \"Never pick up a microphone again...\" :\r\n                          finalScore >= 25 ? \"Never speak again...\" :\r\n                          \"I have no words for this...\";\r\n      onGameEnd(finalScore, finalMessage);\r\n      return;\r\n    }\r\n\r\n    setRound(prev => prev + 1);\r\n    const unusedClips = SAMPLE_CLIPS.filter(clip => \r\n      !scores.some(score => score.clipId === clip.id)\r\n    );\r\n    const clip = unusedClips[Math.floor(Math.random() * unusedClips.length)];\r\n    setCurrentClip(clip);\r\n  };\r\n\r\n  const playLastRecording = async () => {\r\n    if (lastRecording) {\r\n      const audioUrl = URL.createObjectURL(lastRecording);\r\n      const audio = new Audio(audioUrl);\r\n      await audio.play();\r\n      URL.revokeObjectURL(audioUrl);\r\n    }\r\n  };\r\n\r\n  if (loadingAudio) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\r\n        <div className=\"text-2xl mb-4\">Loading audio clips...</div>\r\n        <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\r\n      <div className=\"text-2xl mb-8\">Round {round}/5</div>\r\n      \r\n      {gameState === 'ready' && (\r\n        <button\r\n          onClick={playClip}\r\n          className=\"px-8 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors mb-8\"\r\n        >\r\n          Play Sample Audio\r\n        </button>\r\n      )}\r\n\r\n      {gameState === 'playing' && (\r\n        <div className=\"text-xl text-blue-400 mb-8\">\r\n          Listen carefully...\r\n          <div className=\"w-16 h-16 mt-4 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {gameState === 'countdown' && countdown !== null && (\r\n        <div className=\"text-6xl mb-8 text-yellow-400 animate-pulse\">\r\n          Get Ready: {countdown}\r\n        </div>\r\n      )}\r\n\r\n      {gameState === 'recording' && (\r\n        <div className=\"text-xl text-red-400 mb-8\">\r\n          Recording...\r\n          <div className=\"w-4 h-4 mt-4 bg-red-500 rounded-full animate-ping mx-auto\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {analyzing && (\r\n        <div className=\"text-xl text-purple-400 mb-8\">\r\n          Analyzing your performance...\r\n          <div className=\"w-16 h-16 mt-4 border-4 border-purple-500 border-t-transparent rounded-full animate-spin mx-auto\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {gameState === 'scored' && (\r\n        <div className=\"flex flex-col items-center gap-4 mb-8\">\r\n          <button\r\n            onClick={playLastRecording}\r\n            className=\"px-6 py-2 bg-green-600 hover:bg-green-700 rounded-lg text-sm\"\r\n          >\r\n            Play Your Recording\r\n          </button>\r\n          <button\r\n            onClick={startNextRound}\r\n            className=\"px-8 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold\"\r\n          >\r\n            Next Round\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-4 w-full max-w-md\">\r\n        {scores.map((score, index) => {\r\n          const clip = SAMPLE_CLIPS.find(c => c.id === score.clipId);\r\n          return (\r\n            <div key={index} className=\"bg-gray-800 p-4 rounded-lg\">\r\n              <div className=\"text-lg mb-2\">\r\n                Round {index + 1} - {clip?.name}\r\n              </div>\r\n              <div className=\"text-2xl mb-2 font-bold text-blue-400\">\r\n                Score: {score.score}%\r\n              </div>\r\n              <div className=\"text-sm text-gray-400\">\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {(recordingError || recorderError) && gameState !== 'scored' && (\r\n        <div className=\"text-red-500 mt-4\">\r\n          {recordingError || recorderError}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}