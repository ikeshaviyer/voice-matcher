{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ikesh\\\\Desktop\\\\voice-matcher\\\\src\\\\components\\\\AudioInputBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AudioInputBar = ({\n  onDeviceSelect\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState('');\n  const [audioLevel, setAudioLevel] = useState(0);\n  const [isPlaybackEnabled, setIsPlaybackEnabled] = useState(false);\n  const audioContextRef = useRef(null);\n  const streamRef = useRef(null);\n  const sourceRef = useRef(null);\n  const gainNodeRef = useRef(null);\n  const analyserRef = useRef(null);\n  useEffect(() => {\n    const getDevices = async () => {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const audioDevices = devices.filter(device => device.kind === 'audioinput');\n        setDevices(audioDevices);\n        if (audioDevices.length > 0) {\n          setSelectedDevice(audioDevices[0].deviceId);\n          onDeviceSelect(audioDevices[0].deviceId);\n        }\n      } catch (error) {\n        console.error('Error accessing microphone:', error);\n      }\n    };\n    getDevices();\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, [onDeviceSelect]);\n  useEffect(() => {\n    if (!selectedDevice) return;\n    let animationId;\n    const setupAudio = async () => {\n      try {\n        // Clean up existing audio context and stream\n        if (streamRef.current) {\n          streamRef.current.getTracks().forEach(track => track.stop());\n        }\n        if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n          await audioContextRef.current.close();\n        }\n\n        // Create new audio context and nodes\n        audioContextRef.current = new AudioContext();\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            deviceId: {\n              exact: selectedDevice\n            },\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true\n          }\n        });\n        streamRef.current = stream;\n\n        // Create and configure audio nodes\n        sourceRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        gainNodeRef.current = audioContextRef.current.createGain();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n\n        // Configure analyser\n        analyserRef.current.fftSize = 1024;\n        analyserRef.current.smoothingTimeConstant = 0.8;\n\n        // Set initial gain (volume)\n        gainNodeRef.current.gain.value = 0.5; // Reduced gain to prevent feedback\n\n        // Connect nodes\n        sourceRef.current.connect(analyserRef.current);\n        sourceRef.current.connect(gainNodeRef.current);\n\n        // Only connect to speakers if playback is enabled\n        if (isPlaybackEnabled) {\n          gainNodeRef.current.connect(audioContextRef.current.destination);\n        }\n        const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\n        const updateLevel = () => {\n          if (!analyserRef.current) return;\n          analyserRef.current.getByteFrequencyData(dataArray);\n\n          // Calculate RMS value\n          let sum = 0;\n          for (let i = 0; i < dataArray.length; i++) {\n            sum += dataArray[i] / 128.0 * (dataArray[i] / 128.0);\n          }\n          const rms = Math.sqrt(sum / dataArray.length);\n\n          // Apply scaling and smoothing\n          const scaledLevel = Math.min(100, rms * 150);\n          setAudioLevel(scaledLevel);\n          animationId = requestAnimationFrame(updateLevel);\n        };\n        updateLevel();\n      } catch (error) {\n        console.error('Error setting up audio:', error);\n      }\n    };\n    setupAudio();\n    return () => {\n      if (animationId) cancelAnimationFrame(animationId);\n    };\n  }, [selectedDevice]);\n\n  // Handle playback toggle separately\n  useEffect(() => {\n    if (!gainNodeRef.current || !audioContextRef.current) return;\n    if (isPlaybackEnabled) {\n      gainNodeRef.current.connect(audioContextRef.current.destination);\n    } else {\n      gainNodeRef.current.disconnect(audioContextRef.current.destination);\n    }\n  }, [isPlaybackEnabled]);\n  const togglePlayback = () => {\n    setIsPlaybackEnabled(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-md space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDevice,\n      onChange: e => {\n        setSelectedDevice(e.target.value);\n        onDeviceSelect(e.target.value);\n      },\n      className: \"w-full p-2 bg-gray-700 text-white rounded-lg\",\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device.deviceId,\n        children: device.label || `Microphone ${device.deviceId.slice(0, 5)}`\n      }, device.deviceId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"playback\",\n        checked: isPlaybackEnabled,\n        onChange: togglePlayback,\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playback\",\n        className: \"text-sm\",\n        children: \"Enable live playback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-4 bg-gray-700 rounded-full overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full bg-green-500 transition-all duration-100\",\n        style: {\n          width: `${audioLevel}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-gray-400 text-right\",\n      children: [\"Level: \", Math.round(audioLevel), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioInputBar, \"EbGkJAoU+P2RbU/P/glmqng1AJ4=\");\n_c = AudioInputBar;\nvar _c;\n$RefreshReg$(_c, \"AudioInputBar\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","AudioInputBar","onDeviceSelect","_s","devices","setDevices","selectedDevice","setSelectedDevice","audioLevel","setAudioLevel","isPlaybackEnabled","setIsPlaybackEnabled","audioContextRef","streamRef","sourceRef","gainNodeRef","analyserRef","getDevices","navigator","mediaDevices","getUserMedia","audio","enumerateDevices","audioDevices","filter","device","kind","length","deviceId","error","console","current","getTracks","forEach","track","stop","close","animationId","setupAudio","state","AudioContext","stream","exact","echoCancellation","noiseSuppression","autoGainControl","createMediaStreamSource","createGain","createAnalyser","fftSize","smoothingTimeConstant","gain","value","connect","destination","dataArray","Uint8Array","frequencyBinCount","updateLevel","getByteFrequencyData","sum","i","rms","Math","sqrt","scaledLevel","min","requestAnimationFrame","cancelAnimationFrame","disconnect","togglePlayback","prev","className","children","onChange","e","target","map","label","slice","fileName","_jsxFileName","lineNumber","columnNumber","type","id","checked","htmlFor","style","width","round","_c","$RefreshReg$"],"sources":["C:/Users/ikesh/Desktop/voice-matcher/src/components/AudioInputBar.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\ninterface AudioInputBarProps {\r\n  onDeviceSelect: (deviceId: string) => void;\r\n}\r\n\r\nexport const AudioInputBar: React.FC<AudioInputBarProps> = ({ onDeviceSelect }) => {\r\n  const [devices, setDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [selectedDevice, setSelectedDevice] = useState<string>('');\r\n  const [audioLevel, setAudioLevel] = useState<number>(0);\r\n  const [isPlaybackEnabled, setIsPlaybackEnabled] = useState(false);\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const streamRef = useRef<MediaStream | null>(null);\r\n  const sourceRef = useRef<MediaStreamAudioSourceNode | null>(null);\r\n  const gainNodeRef = useRef<GainNode | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    const getDevices = async () => {\r\n      try {\r\n        await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const audioDevices = devices.filter(device => device.kind === 'audioinput');\r\n        setDevices(audioDevices);\r\n        \r\n        if (audioDevices.length > 0) {\r\n          setSelectedDevice(audioDevices[0].deviceId);\r\n          onDeviceSelect(audioDevices[0].deviceId);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error accessing microphone:', error);\r\n      }\r\n    };\r\n\r\n    getDevices();\r\n\r\n    return () => {\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, [onDeviceSelect]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedDevice) return;\r\n\r\n    let animationId: number;\r\n    \r\n    const setupAudio = async () => {\r\n      try {\r\n        // Clean up existing audio context and stream\r\n        if (streamRef.current) {\r\n          streamRef.current.getTracks().forEach(track => track.stop());\r\n        }\r\n        if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\r\n          await audioContextRef.current.close();\r\n        }\r\n\r\n        // Create new audio context and nodes\r\n        audioContextRef.current = new AudioContext();\r\n        \r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: { \r\n            deviceId: { exact: selectedDevice },\r\n            echoCancellation: true,\r\n            noiseSuppression: true,\r\n            autoGainControl: true\r\n          }\r\n        });\r\n        streamRef.current = stream;\r\n\r\n        // Create and configure audio nodes\r\n        sourceRef.current = audioContextRef.current.createMediaStreamSource(stream);\r\n        gainNodeRef.current = audioContextRef.current.createGain();\r\n        analyserRef.current = audioContextRef.current.createAnalyser();\r\n\r\n        // Configure analyser\r\n        analyserRef.current.fftSize = 1024;\r\n        analyserRef.current.smoothingTimeConstant = 0.8;\r\n\r\n        // Set initial gain (volume)\r\n        gainNodeRef.current.gain.value = 0.5; // Reduced gain to prevent feedback\r\n\r\n        // Connect nodes\r\n        sourceRef.current.connect(analyserRef.current);\r\n        sourceRef.current.connect(gainNodeRef.current);\r\n\r\n        // Only connect to speakers if playback is enabled\r\n        if (isPlaybackEnabled) {\r\n          gainNodeRef.current.connect(audioContextRef.current.destination);\r\n        }\r\n\r\n        const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\r\n        \r\n        const updateLevel = () => {\r\n          if (!analyserRef.current) return;\r\n          \r\n          analyserRef.current.getByteFrequencyData(dataArray);\r\n          \r\n          // Calculate RMS value\r\n          let sum = 0;\r\n          for (let i = 0; i < dataArray.length; i++) {\r\n            sum += (dataArray[i] / 128.0) * (dataArray[i] / 128.0);\r\n          }\r\n          const rms = Math.sqrt(sum / dataArray.length);\r\n          \r\n          // Apply scaling and smoothing\r\n          const scaledLevel = Math.min(100, rms * 150);\r\n          setAudioLevel(scaledLevel);\r\n          \r\n          animationId = requestAnimationFrame(updateLevel);\r\n        };\r\n\r\n        updateLevel();\r\n      } catch (error) {\r\n        console.error('Error setting up audio:', error);\r\n      }\r\n    };\r\n\r\n    setupAudio();\r\n\r\n    return () => {\r\n      if (animationId) cancelAnimationFrame(animationId);\r\n    };\r\n  }, [selectedDevice]);\r\n\r\n  // Handle playback toggle separately\r\n  useEffect(() => {\r\n    if (!gainNodeRef.current || !audioContextRef.current) return;\r\n\r\n    if (isPlaybackEnabled) {\r\n      gainNodeRef.current.connect(audioContextRef.current.destination);\r\n    } else {\r\n      gainNodeRef.current.disconnect(audioContextRef.current.destination);\r\n    }\r\n  }, [isPlaybackEnabled]);\r\n\r\n  const togglePlayback = () => {\r\n    setIsPlaybackEnabled(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md space-y-4\">\r\n      <select\r\n        value={selectedDevice}\r\n        onChange={(e) => {\r\n          setSelectedDevice(e.target.value);\r\n          onDeviceSelect(e.target.value);\r\n        }}\r\n        className=\"w-full p-2 bg-gray-700 text-white rounded-lg\"\r\n      >\r\n        {devices.map(device => (\r\n          <option key={device.deviceId} value={device.deviceId}>\r\n            {device.label || `Microphone ${device.deviceId.slice(0, 5)}`}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      \r\n      <div className=\"flex items-center gap-2 mb-2\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"playback\"\r\n          checked={isPlaybackEnabled}\r\n          onChange={togglePlayback}\r\n          className=\"w-4 h-4\"\r\n        />\r\n        <label htmlFor=\"playback\" className=\"text-sm\">\r\n          Enable live playback\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"w-full h-4 bg-gray-700 rounded-full overflow-hidden\">\r\n        <div\r\n          className=\"h-full bg-green-500 transition-all duration-100\"\r\n          style={{ width: `${audioLevel}%` }}\r\n        />\r\n      </div>\r\n      <div className=\"text-xs text-gray-400 text-right\">\r\n        Level: {Math.round(audioLevel)}%\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}